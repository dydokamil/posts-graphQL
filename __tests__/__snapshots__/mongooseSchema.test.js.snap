// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`mongoose \`Post\` schema should create 1 post 1`] = `
Array [
  Object {
    "__v": 0,
    "_id": "5abba8e47af4d91c259e12ee",
    "author": "5abba8e47af4d91c259e12ef",
    "createdAt": "2018-10-10T13:00:00",
    "editedAt": "2018-10-10T13:00:00",
    "message": "Some message",
  },
]
`;

exports[`mongoose \`Post\` schema should not add the response to a subject when token is invalid 1`] = `[TokenExpiredError: jwt expired]`;

exports[`mongoose \`Post\` schema should not allow other users to edit the post 1`] = `[Error: Authentication error.]`;

exports[`mongoose \`Post\` schema should not create a new subject given an invalid token 1`] = `[TokenExpiredError: jwt expired]`;

exports[`mongoose \`Post\` schema should not create a post if subject invalid 1`] = `[Error: Subject not found.]`;

exports[`mongoose \`Post\` schema should not delete a post when author is invalid 1`] = `[Error: Authencitation error]`;

exports[`mongoose \`Post\` schema should not delete a post when token is invalid 1`] = `[TokenExpiredError: jwt expired]`;

exports[`mongoose \`Post\` schema should not delete non-existent post 1`] = `[Error: Post not found.]`;

exports[`mongoose \`Post\` schema should not edit post message given an invalid token 1`] = `[TokenExpiredError: jwt expired]`;

exports[`mongoose \`Post\` schema should not edit the subject given a wrong author 1`] = `[Error: Authentication error]`;

exports[`mongoose \`Post\` schema should not get a token if password is incorrect 1`] = `[Error: Password incorrect.]`;

exports[`mongoose \`Post\` schema should not update the password if user not authenticated 1`] = `[TokenExpiredError: jwt expired]`;

exports[`mongoose \`Post\` schema should not verify an invalid token 1`] = `[TokenExpiredError: jwt expired]`;
